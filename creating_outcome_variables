/*Assign permanent library*/

libname long 'C:\Users\jenni\OneDrive\Documents\FALL2020\Longitudinal_analysis\SAS';
/* create formats for key new variables that will be created*/
proc format;
value use 0 = 'Non-BAM' /* use is a variable establishing whether the reason for prescribing a medication is primarily/secondarily for BMD loss or not */
		1 = 'Secondary Use BAM'
		2 = 'Primary BAM';
value studytime 0 = 'Baseline Year 2013' /* Years over which this study spans 2013-2017 2013 is the baseline year because we use it to identify our study sample from our total population*/
		1 = '2014'
		2 = '2015'
		3 = '2016'
		4 = '2017';
value drugtype 
		0='Not BAM'
		1 = 'Bisphosphonate'
		2 = 'BAM hormone like'
		3 = 'SERM'
		4 = 'monoclonal antibodies'
		5 = 'Rx Vitamin';	
value grouping 
0=	'Generalists' /*(internal medicine or family)*/
1 = 'Geriatric Specialists'
2 = 'Nurse practitioners'
3 = ' Physicians Assistants'
4 = 'Specialists'/*  Surgeons, OB/GYN & Urologists, rheumatologic & endocrinologic & OMT*/;		
run;

/* This next line adds extra information to the log on the time spent running a datastep or proc*/

options fullstimer;

/* Import Raw Claims datasets*/

/*Import 2013 to permanet dataset*/

DATA long.PartD_Prescriber_PUF_NPI_Drug_13 ;
	LENGTH
		npi								$10
		nppes_provider_last_org_name	$ 70
		nppes_provider_first_name		$ 20
		nppes_provider_state			$  2
		nppes_provider_city				$ 40
		specialty_description			$ 75
		description_flag				$  1
		drug_name		 		 		$ 30
		generic_name					$ 30
		bene_count						   8
		total_claim_count				   8
		total_30_day_fill_count			   8
		total_day_supply				   8
		total_drug_cost					   8
		bene_count_ge65					   8
		bene_count_ge65_suppress_flag	$  1
		total_claim_count_ge65			   8
		ge65_suppress_flag				$  1
		total_30_day_fill_count_ge65	   8
		total_day_supply_ge65			   8
		total_drug_cost_ge65			   8
	;
	
	INFILE 'C:\Users\jenni\OneDrive\Documents\FALL2020\Longitudinal_analysis\SAS\PartD_Prescriber_PUF_NPI_Drug_13.txt'
		dlm='09'x
		pad missover
		firstobs = 2
		dsd;
	INPUT
		npi								
		nppes_provider_last_org_name	
		nppes_provider_first_name		
		nppes_provider_state			
		nppes_provider_city				
		specialty_description			
		description_flag				
		drug_name		 		 		
		generic_name					
		bene_count						   
		total_claim_count				   
		total_30_day_fill_count			   
		total_day_supply				   
		total_drug_cost					   
		bene_count_ge65					   
		bene_count_ge65_suppress_flag	  
		total_claim_count_ge65			   
		ge65_suppress_flag				
		total_30_day_fill_count_ge65	   
		total_day_supply_ge65			  
		total_drug_cost_ge65			   
	;
keep 	npi
		nppes_provider_state	
		specialty_description
		drug_name
		generic_name
		bene_count_ge65
		total_claim_count_ge65
		total_30_day_fill_count_ge65;	
RUN;

/*Convert npi (the id variable to numeric value) vastly speeds up processing time & add time variable*/

data long.bam2013(compress=yes);
set long.PartD_Prescriber_PUF_NPI_Drug_13;
	 time=0;
	  npi_num=input(npi,10.);
	 format time studytime.;
	 drop npi;
run;


DATA long.PartD_Prescriber_PUF_NPI_Drug_14  ;
	LENGTH
		npi								 $10
		nppes_provider_last_org_name	$ 70
		nppes_provider_first_name		$ 20
		nppes_provider_state			$  2
		nppes_provider_city				$ 40
		specialty_description			$ 75
		description_flag				$  1
		drug_name		 		 		$ 30
		generic_name					$ 30
		bene_count						   8
		total_claim_count				   8
		total_30_day_fill_count			   8
		total_day_supply				   8
		total_drug_cost					   8
		bene_count_ge65					   8
		bene_count_ge65_suppress_flag	$  1
		total_claim_count_ge65			   8
		ge65_suppress_flag				$  1
		total_30_day_fill_count_ge65	   8
		total_day_supply_ge65			   8
		total_drug_cost_ge65			   8
	;
	
	INFILE 'C:\Users\jenni\OneDrive\Documents\FALL2020\Longitudinal_analysis\SAS\PartD_Prescriber_PUF_NPI_Drug_14.txt'
		dlm='09'x
		pad missover
		firstobs = 2
		dsd;
		INPUT
		npi								
		nppes_provider_last_org_name	
		nppes_provider_first_name		
		nppes_provider_state			
		nppes_provider_city				
		specialty_description			
		description_flag				
		drug_name		 		 		
		generic_name					
		bene_count						   
		total_claim_count				   
		total_30_day_fill_count			   
		total_day_supply				   
		total_drug_cost					   
		bene_count_ge65					   
		bene_count_ge65_suppress_flag	  
		total_claim_count_ge65			   
		ge65_suppress_flag				
		total_30_day_fill_count_ge65	   
		total_day_supply_ge65			  
		total_drug_cost_ge65			   
	;	
keep 
		npi
		nppes_provider_state	
		specialty_description
		drug_name
		generic_name
		bene_count_ge65
		total_claim_count_ge65
		total_30_day_fill_count_ge65;
RUN;


data long.bam2014(compress=yes);
set long.PartD_Prescriber_PUF_NPI_Drug_14;
time=1;
 npi_num=input(npi,10.);
	 format time studytime.;
	 drop npi;
run;

DATA long.PartD_Prescriber_PUF_NPI_Drug_15  ;
	LENGTH
		npi								 $10
		nppes_provider_last_org_name	$ 70
		nppes_provider_first_name		$ 20
		nppes_provider_state			$  2
		nppes_provider_city				$ 40
		specialty_description			$ 75
		description_flag				$  1
		drug_name		 		 		$ 30
		generic_name					$ 30
		bene_count						   8
		total_claim_count				   8
		total_30_day_fill_count			   8
		total_day_supply				   8
		total_drug_cost					   8
		bene_count_ge65					   8
		bene_count_ge65_suppress_flag	$  1
		total_claim_count_ge65			   8
		ge65_suppress_flag				$  1
		total_30_day_fill_count_ge65	   8
		total_day_supply_ge65			   8
		total_drug_cost_ge65			   8
	;
	
	INFILE 'C:\Users\jenni\OneDrive\Documents\FALL2020\Longitudinal_analysis\SAS\PartD_Prescriber_PUF_NPI_Drug_15.txt'
		dlm='09'x
		pad missover
		firstobs = 2
		dsd;
		INPUT
		npi								
		nppes_provider_last_org_name	
		nppes_provider_first_name		
		nppes_provider_state			
		nppes_provider_city				
		specialty_description			
		description_flag				
		drug_name		 		 		
		generic_name					
		bene_count						   
		total_claim_count				   
		total_30_day_fill_count			   
		total_day_supply				   
		total_drug_cost					   
		bene_count_ge65					   
		bene_count_ge65_suppress_flag	  
		total_claim_count_ge65			   
		ge65_suppress_flag				
		total_30_day_fill_count_ge65	   
		total_day_supply_ge65			  
		total_drug_cost_ge65			   
	;	
keep 
		npi
		nppes_provider_state	
		specialty_description
		drug_name
		generic_name
		bene_count_ge65
		total_claim_count_ge65
		total_30_day_fill_count_ge65;
RUN;


data long.bam2015(compress=yes);
set long.PartD_Prescriber_PUF_NPI_Drug_15;
time=2;
	 npi_num=input(npi,10.);
	 format time studytime.;
	 drop npi;
run;

DATA long.PartD_Prescriber_PUF_NPI_Drug_16  ;
	LENGTH
		npi								 $10
		nppes_provider_last_org_name	$ 70
		nppes_provider_first_name		$ 20
		nppes_provider_state			$  2
		nppes_provider_city				$ 40
		specialty_description			$ 75
		description_flag				$  1
		drug_name		 		 		$ 30
		generic_name					$ 30
		bene_count						   8
		total_claim_count				   8
		total_30_day_fill_count			   8
		total_day_supply				   8
		total_drug_cost					   8
		bene_count_ge65					   8
		bene_count_ge65_suppress_flag	$  1
		total_claim_count_ge65			   8
		ge65_suppress_flag				$  1
		total_30_day_fill_count_ge65	   8
		total_day_supply_ge65			   8
		total_drug_cost_ge65			   8
	;
	
	INFILE 'C:\Users\jenni\OneDrive\Documents\FALL2020\Longitudinal_analysis\SAS\PartD_Prescriber_PUF_NPI_Drug_16.txt'
		dlm='09'x
		pad missover
		firstobs = 2
		dsd;
		INPUT
		npi								
		nppes_provider_last_org_name	
		nppes_provider_first_name		
		nppes_provider_state			
		nppes_provider_city				
		specialty_description			
		description_flag				
		drug_name		 		 		
		generic_name					
		bene_count						   
		total_claim_count				   
		total_30_day_fill_count			   
		total_day_supply				   
		total_drug_cost					   
		bene_count_ge65					   
		bene_count_ge65_suppress_flag	  
		total_claim_count_ge65			   
		ge65_suppress_flag				
		total_30_day_fill_count_ge65	   
		total_day_supply_ge65			  
		total_drug_cost_ge65			   
	;	
keep 
		npi
		nppes_provider_state	
		specialty_description
		drug_name
		generic_name
		bene_count_ge65
		total_claim_count_ge65
		total_30_day_fill_count_ge65;
RUN;


data long.bam2016(compress=yes);
set long.PartD_Prescriber_PUF_NPI_Drug_16;
	 time=3;
	 npi_num=input(npi,10.);
	 format time studytime.;
	 drop npi;
run;


DATA long.PartD_Prescriber_PUF_NPI_Drug_17  ;
	LENGTH
		npi								 $10
		nppes_provider_last_org_name	$ 70
		nppes_provider_first_name		$ 20
		nppes_provider_state			$  2
		nppes_provider_city				$ 40
		specialty_description			$ 75
		description_flag				$  1
		drug_name		 		 		$ 30
		generic_name					$ 30
		bene_count						   8
		total_claim_count				   8
		total_30_day_fill_count			   8
		total_day_supply				   8
		total_drug_cost					   8
		bene_count_ge65					   8
		bene_count_ge65_suppress_flag	$  1
		total_claim_count_ge65			   8
		ge65_suppress_flag				$  1
		total_30_day_fill_count_ge65	   8
		total_day_supply_ge65			   8
		total_drug_cost_ge65			   8
	;
	
	INFILE 'C:\Users\jenni\OneDrive\Documents\FALL2020\Longitudinal_analysis\SAS\PartD_Prescriber_PUF_NPI_Drug_17.txt'
		dlm='09'x
		pad missover
		firstobs = 2
		dsd;
		INPUT
		npi								
		nppes_provider_last_org_name	
		nppes_provider_first_name		
		nppes_provider_state			
		nppes_provider_city				
		specialty_description			
		description_flag				
		drug_name		 		 		
		generic_name					
		bene_count						   
		total_claim_count				   
		total_30_day_fill_count			   
		total_day_supply				   
		total_drug_cost					   
		bene_count_ge65					   
		bene_count_ge65_suppress_flag	  
		total_claim_count_ge65			   
		ge65_suppress_flag				
		total_30_day_fill_count_ge65	   
		total_day_supply_ge65			  
		total_drug_cost_ge65			   
	;	
keep 
		npi
		nppes_provider_state	
		specialty_description
		drug_name
		generic_name
		bene_count_ge65
		total_claim_count_ge65
		total_30_day_fill_count_ge65;
RUN;


data long.bam2017(compress=yes);
set long.PartD_Prescriber_PUF_NPI_Drug_17;
	 time=4;
	 npi_num=input(npi,10.);
	 format time studytime.;
	 drop npi;
run;

/*code to remove datasets from working memory to speed up processes*/

/* Create formats/labels for group variables*/
/*Specialits = 4 Surgeons, OB/GYN & Urologists, 
	rheumatologic & endocrinologic & OMT &,
	Generalists = 0 (internal medicine or family)
   Nurse practitioners=2
 Geriatric Specialists=1
 Physician's Assistants=3 */
data long.final1;
set long.bam2013 long.bam2014 long.bam2015 long.bam2016 long.bam2017;
run;
data long.final1comp (compress=yes);
set long.final1;
run;

proc contents data=long.final1comp;
run;

 /* primary outcome */
data long.final1comp1;
	set long.final1comp;
if 		
		specialty_description='Orthopaedic Surgery'|
		specialty_description='Orthopedic Surgery'|
		specialty_description='Gynecological/Oncology' |
		specialty_description='Obstetrics/Gynecology' |
		specialty_description='Urology' |
		specialty_description='Rheumatology' |
		specialty_description='Endocrinology'|
		specialty_description='Osteopathic Manipulative Medicine' |	
		specialty_description='Physical Medicine and Rehabilitation'|
		specialty_description='Hematology/Oncology' |
		specialty_description='Medical Oncology' |
		specialty_description='Radiation Oncology' |
		specialty_description='Pulmonary Disease' |
		specialty_description='Nephrology'|		
		specialty_description='Specialist'|
		specialty_description='Gastroenterology'	
then 	group=4;
else if specialty_description='Physician Assistant' 
then 	group=3;
else if specialty_description='Licensed Practical Nurse'|
		specialty_description='Certified Clinical Nurse Specialist' |
		specialty_description='Certified Nurse Midwife'| 
		specialty_description='Registered Nurse'|
		specialty_description='Nurse Practitioner'
then	group=2;
else if specialty_description='Geriatric Medicine' 
then	group=1;
else if specialty_description='Family Medicine' |
		specialty_description='Family Practice' |
		specialty_description='General Practice'|
		specialty_description='Internal Medicine'|
		specialty_description='Preventive Medicine'|
		specialty_description='Emergency Medicine'|
		specialty_description='General Surgery' 	
then 	group=0;
else group=. ;
if drug_name='ACTONEL'	|generic_name='RISEDRONATE SODIUM'|
drug_name='ALENDRONATE SODIUM'|	generic_name='ALENDRONATE SODIUM'|	
drug_name='ATELVIA'	|drug_name='BINOSTO'|	drug_name='BONIVA*'|generic_name='IBANDRONATE SODIUM'|	
drug_name='CALCITONIN-SALMON'|	generic_name='CALCITONIN,SALMON,SYNTHETIC'|	
drug_name='EVISTA'|	generic_name='RALOXIFENE HCL'|
drug_name='FORTEO'	|generic_name='TERIPARATIDE'|	
drug_name='FORTICAL'|	drug_name='FOSAMAX PLUS D'	|generic_name='ALENDRONATE SODIUM/VITAMIN D3'|	
drug_name='IBANDRONATE SODIUM*'|	drug_name='MIACALCIN*'|drug_name='PROLIA' |generic_name='DENOSUMAB'|	
drug_name='RALOXIFENE HCL'|	generic_name='RALOXIFENE HCL'|	
drug_name='RECLAST'|	generic_name='ZOLEDRONIC ACID/MANNITOL-WATER'	|
drug_name='RISEDRONATE SODIUM'	|	drug_name='RISEDRONATE SODIUM DR'|	drug_name='TYMLOS'| generic_name='ABALOPARATIDE'|	
drug_name='VITAMIN D2'|	generic_name='ERGOCALCIFEROL (VITAMIN D2)'|	
drug_name='ZOLEDRONIC ACID'|	generic_name='ZOLEDRONIC ACID/MANNITOL-WATER' then use=1;
else use=0;
if  
	generic_name='RISEDRONATE SODIUM'|
	generic_name='ALENDRONATE SODIUM'|
	generic_name='IBANDRONATE SODIUM'| 
	generic_name='TERIPARATIDE'|
	generic_name='ALENDRONATE SODIUM/VITAMIN D3'|
	generic_name='ZOLEDRONIC ACID/MANNITOL-WATER'
		then type=1;
else if	generic_name='CALCITONIN,SALMON,SYNTHETIC'|	generic_name='ABALOPARATIDE' then	type=2;
else if	generic_name='RALOXIFENE HCL' then type=3;
else if  generic_name='DENOSUMAB' then type=4;
else if generic_name='ERGOCALCIFEROL (VITAMIN D2)' then type=5;
else type=0;
run;

data long.finalcom1(compress=yes);
set long.final1comp1;
run;

data a;
set long.final1comp1;
if type > 0  then bamprescriber=1;
else bamprescriber=0;
run;

data b (compress=yes);
set a;
if bamprescriber=0 then delete;
run;

proc sort data=b;
by npi_num;
run;
proc sort data=long.final1comp1;
by npi_num;
run;

data analytic;
merge long.final1comp1 b;
by npi_num;
run;

data long.finalbamprescribers(compress=yes);
set analytic;
if bamprescriber=. then delete;
run;

proc contents data=long.finalbamprescribers;
run;

data gg;
set long.finalbamprescribers;
drop drug_name;
run;


data gg (compress=yes);
set gg;
run;

proc contents data=gg;
run;

data gg;
set gg;
format nppes_provider_state state.;
run;

proc sort data=long.finalbamprescribers ;
by  npi_num;
run;

DATA COUNT_IT;
SET long.finalbamprescribers(KEEP=npi_num);
BY npi_num;
IF FIRST.npi_num THEN N_obs = 1; ELSE N_obs + 1;
IF LAST.npi_num THEN OUTPUT; 
RUN;

data finala(compress=yes);
set long.finalbamprescribers;
if group=. then delete;
run;

proc sort data=finala;
by time npi_num;
run; 

proc summary data=finala sum noprint;
by time npi_num;
 var bene_count_ge65;
 output out=sumoverall sum(bene_count_ge65)= sumoverallbene;
 run;

 

 data tabs;
 set tabs;
 if bamprescriber<1 then delete;
 run;
